# spell		A script wrapper to enable aspell for spell checking files
#
# LGD Wed Nov 27 10:24:30 PST 2013
# 
# Backup file implemented: Sat 25 Jun 13:54:59 PDT 2016
#

LANG=en
if [[ $# -lt 1 ]] ;then						# If there's no argument, issue Usage message and exit
  echo -e "\n$0: Usage: spell <file to spell check>" >&2 
  exit 1
else
  if [[ -e "${1}.bak" ]]  ;then					# If a backup file exists, calculate the file-name of the new backup file (up to 10)
      for (( i=1; i<10; i++ )) ;do				# Start searching for acceptable backup file-names
        if [[ -e "${1}.bak$i" ]] ;then				# Search for the first backup file-name beyond those that currently exist
          continue						# Still haven't found it
        else
          export BAKFIL="${1}.bak$i"
          break							# We're done searching, so go on and create the new backup file
        fi
      done
      if [[ $i -gt 9 ]] ;then					# Trap for more than ten backup files after falling through for-loop
        echo -e "\n$0: Too Many Backup Files!  Please remove backup files before trying again.\n"
        ls -l "${1}.bak"*
        echo
        exit 2
      fi
  fi
fi

# Edit the file
cp $1 "${BAKFIL:-$1.bak}" || ( echo -e "$0: Unable to create backup file ${BAKFIL}; aborting\n" ;exit 1 )	# Create the new backup file
#aspell --dict-dir=/usr/lib/aspell-0.60/aspell6-en-6.0-0 -c ${1:-}						# Old statement  saved
aspell -d en_US -c $1												# Spell-check the file
echo -e "\n\n$0: Backup file $BAKFIL has been created\n"				BUG HERE			# Remind the user of the new backup file

exit
